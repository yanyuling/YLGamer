--[[
Copyright (c) 2015-2016 ewang.com

NpcFriendProtocolHandler.lua

Author: zhangxf & wangyan
Date: 2015/8/23
Description: npc好友相关数据也缓存于此，相关协议的发送于接收处理都封装在此，处理完的数据通过Notification同步出去

]]

local protocolHandlerBase = cc.loaded_packages["ProtocolHandlerBase"]

local NpcFriendProtocolHandler = class("NpcFriendProtocolHandler", protocolHandlerBase)

function NpcFriendProtocolHandler:create()
    self:initData()
    
    self:registerHandler(MsgId.NpcFriendBaseInfoResp, handler(self,self.handleNpcFriendBaseInfoResp))
end

function NpcFriendProtocolHandler:handleNpcFriendBaseInfoResp(respData)
    NpcFriendHandler:setMedalList(respData.medalList)
    NpcFriendHandler:setFriendNpcList(respData.friend_npc_list)
    Notification:dispatch(NotifyKey.UPDATE_HANDLER_STATUS, "NpcFriendProtocolHandler")
end

function NpcFriendProtocolHandler:initData()
    self._friendNpcList = {}   --好友NPC列表
    self._medalList = {}       --勋章列表
end

function NpcFriendProtocolHandler:reqEventFinish(npcID)
    NetManager:send(MsgId.NpcGainAward, {npcId = npcID})
end

function NpcFriendProtocolHandler:setMedalList(param)
    self._medalList = param
end

function NpcFriendProtocolHandler:getMedalList()
    return self._medalList
end
--判断是否拥有指定id的勋章 20160218 yanyuling
function NpcFriendProtocolHandler:isOwnMedelById( medalId )
    for i=1,#self._medalList do
        if tonumber(self._medalList[i]) == tonumber(medalId) then
            return true
        end
    end
    return false
end
--把新获得的勋章数据插入记录列表 yan 1028
function NpcFriendProtocolHandler:addNewMedal(medalId)
    if self:isOwnMedelById(medalId) then
        return
    end
--在存储新的勋章数据的时候，需要处理身价数据  SHENJIA yan 1120 social_status
    local medalPro = StaticData.medal_prototype[tonumber(medalId)]
    if medalPro and next(medalPro) then
        -- PlayerHandler:syncAttribute(AttributeKind.ATTR_SOCIALPRICE,tonumber(medalPro["social_status"]))
    end
    self._medalList[#self._medalList +1 ] = medalId
    --获取新勋章 弹出提示UI 20160309 yanyuling
    UIManager:openUI(UIKey.PopUpPanelMedal, {contentType = PopUpContentType.CONTENT_MEDAL,contentId = medalId})--[勋章弹出框修改---guoshengwei 2016.5.9]
    
end
function NpcFriendProtocolHandler:setFriendNpcList(param)
    self._friendNpcList = param
end

--NPC好友列表
function NpcFriendProtocolHandler:getFriendNpcList()
    local haveAwardList = {}
    local noAwardList = {}
    local b = table.getn(self._friendNpcList)

    for a =1,b do
        if table.getn(self._friendNpcList[a].waitAward) > 0 then
            table.insert(haveAwardList,self._friendNpcList[a])
        else
            table.insert(noAwardList,self._friendNpcList[a])
        end
    end
    
    local n = #haveAwardList
    local isF = true
    for m=n-1,1,-1 do
        isF = true
        for i=n-1,1,-1 do
            if table.getn(haveAwardList[i].waitAward) < table.getn(haveAwardList[i+1].waitAward) then
                haveAwardList[i],haveAwardList[i+1] = haveAwardList[i+1],haveAwardList[i]
                isF = false
            end
        end
        if isF then break end
    end
    
    local n = #noAwardList
    for m=n-1,1,-1 do
        isF = true
        for i=n-1,1,-1 do
            if noAwardList[i].favorGrade < noAwardList[i+1].favorGrade then
                noAwardList[i],noAwardList[i+1] = noAwardList[i+1],noAwardList[i]
                isF = false
            end
        end
        if isF then break end
    end
    
    for i=1,n do
        table.insert(haveAwardList,noAwardList[i])
    end
    self._friendNpcList = haveAwardList
      
    return self._friendNpcList
end

--判断是否是NPC好友
function NpcFriendProtocolHandler:isNpcFriend(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if tonumber(npcId) == self._friendNpcList[i].npcID then
            return self._friendNpcList[i]
        end
    end
    return false
end

--移除已经领取的奖励ID
function NpcFriendProtocolHandler:removeOneFriendAwardId(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            table.remove(self._friendNpcList[i].waitAward,1)
            self._friendNpcList[i].gainAwardNum = self._friendNpcList[i].gainAwardNum + 1
            break
        end
    end
end

--one NPC好友奖励
function NpcFriendProtocolHandler:getOneFriendAwardList(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if tonumber(npcId) == self._friendNpcList[i].npcID then
            return  self._friendNpcList[i].waitAward
        end
    end   
end

--增加一个奖励
function NpcFriendProtocolHandler:insertFriendAward(npcId,award_id) 
    for i=1,table.getn(self._friendNpcList) do
        if tonumber(npcId) == self._friendNpcList[i].npcID then
            table.insert(self._friendNpcList[i].waitAward,tonumber(award_id)) 
            break
        end
    end 
end

--one NPC好友
function NpcFriendProtocolHandler:getOneFriendList(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            return  self._friendNpcList[i]
        end
    end   
end

--更新已经领取奖励的次数
function NpcFriendProtocolHandler:setFriendGainAwardNum(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            self._friendNpcList[i].gainAwardNum = self._friendNpcList[i].gainAwardNum + 1
            break
        end
    end 
end

--获得已经领取奖励的次数
function NpcFriendProtocolHandler:getFriendGainAwardNum(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            return self._friendNpcList[i].gainAwardNum
        end
    end 
end

--筛选没有强制NPC且同勋章类型npc
function NpcFriendProtocolHandler:getEventFriendList(index)
    local tableNpc = {}
    if table.getn(self._friendNpcList) <= 0 then
        return tableNpc
    end
    local eventId = EventHandler:getNextEventId()
    local eventPro = StaticData.event_prototype[eventId]
    local medalType = tonumber(string.split(eventPro.team_medal_value,"_")[index])   
    local teamNpc = string.split(eventPro.team_npc,"_")
    for i=1,table.getn(self._friendNpcList) do
        local npcId = self._friendNpcList[i].npcID
        local isMust = false
        for j=1,table.getn(teamNpc) do
            if npcId == tonumber(teamNpc[j]) then
                isMust = true
                break
            end
        end
        local npcPro = StaticData.npc_prototype[npcId]
        if isMust == false and npcPro.npc_medal ~= "" then
            local tableMedal = string.split(npcPro.npc_medal,"_")
            for m=1,table.getn(tableMedal) do
                local medalPro = StaticData.medal_prototype[tonumber(tableMedal[m])]
                if medalPro.medal_group == medalType then
                    table.insert(tableNpc,self._friendNpcList[i])
                    break
                end
            end
        end
    end
    return tableNpc
end

--更新NPC约会或者客串次数
function NpcFriendProtocolHandler:setFriendDateOrCallCount(npcId,nType)
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            if nType == 1 then  --客串
                local lastCallTime = self._friendNpcList[i].lastCallTime
                local nowTime = os.time()
                local param = Utils.isSameDay(lastCallTime,nowTime)
                local preSec = param.preTab.hour * 60 * 60 + param.preTab.min * 60 + param.preTab.sec
                local nowSec = param.nowTab.hour * 60 * 60 + param.nowTab.min * 60 + param.nowTab.sec
                if param.isSame == true then
                    local configSec = StaticData.gameconfig[28].const_value
                    if preSec > configSec and nowSec > configSec then
                        self._friendNpcList[i].callCount = self._friendNpcList[i].callCount + 1
                    elseif preSec < configSec and nowSec < configSec then
                        self._friendNpcList[i].callCount = self._friendNpcList[i].callCount + 1
                    else
                        self._friendNpcList[i].callCount = 1
                    end                
                else
                    local configSec = StaticData.gameconfig[28].const_value
                    if (nowTime - lastCallTime) < 24 * 60 * 60 and preSec > configSec and nowSec < configSec then
                        self._friendNpcList[i].callCount = self._friendNpcList[i].callCount + 1
                    else
                        self._friendNpcList[i].callCount = 1
                    end                
                end
                self._friendNpcList[i].lastCallTime = nowTime
            elseif nType == 2 then --约会
                local lastDateTime = self._friendNpcList[i].lastDateTime
                local nowTime = os.time()
                local param = Utils.isSameDay(lastDateTime,nowTime)
                local preSec = param.preTab.hour * 60 * 60 + param.preTab.min * 60 + param.preTab.sec
                local nowSec = param.nowTab.hour * 60 * 60 + param.nowTab.min * 60 + param.nowTab.sec
                if param.isSame == true then
                    local configSec = StaticData.gameconfig[29].const_value
                    if preSec > configSec and nowSec > configSec then
                        self._friendNpcList[i].dateCount = self._friendNpcList[i].dateCount + 1
                    elseif preSec < configSec and nowSec < configSec then
                        self._friendNpcList[i].dateCount = self._friendNpcList[i].dateCount + 1
                    else
                        self._friendNpcList[i].dateCount = 1
                    end                
                else
                    self._friendNpcList[i].dateCount = 1
                    local configSec = StaticData.gameconfig[28].const_value
                    if (nowTime - lastDateTime) < 24 * 60 * 60 and preSec > configSec and nowSec < configSec then
                        self._friendNpcList[i].dateCount = self._friendNpcList[i].dateCount + 1
                    else
                        self._friendNpcList[i].dateCount = 1
                    end                
                end
                self._friendNpcList[i].lastDateTime = nowTime
            end
            break
        end
    end 
end

--获得NPC约会或者客串次数
function NpcFriendProtocolHandler:getFriendDateOrCallCount(npcId,nType)
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            if nType == 1 then  --客串
                local lastCallTime = self._friendNpcList[i].lastCallTime
                local nowTime = os.time()
                local param = Utils.isSameDay(lastCallTime,nowTime)
                local preSec = param.preTab.hour * 60 * 60 + param.preTab.min * 60 + param.preTab.sec
                local nowSec = param.nowTab.hour * 60 * 60 + param.nowTab.min * 60 + param.nowTab.sec
                if param.isSame == true then
                    local configSec = StaticData.gameconfig[28].const_value
                    if preSec > configSec and nowSec > configSec then
                    elseif preSec < configSec and nowSec < configSec then
                    else
                        self._friendNpcList[i].callCount = 0
                        self._friendNpcList[i].lastCallTime = 0
                    end                
                else
                    local configSec = StaticData.gameconfig[28].const_value
                    if (nowTime - lastCallTime) < 24 * 60 * 60 and preSec > configSec and nowSec < configSec then
                    else
                        self._friendNpcList[i].callCount = 0
                        self._friendNpcList[i].lastCallTime = 0
                    end               
                end
                return self._friendNpcList[i].callCount
            elseif nType == 2 then --约会
                local lastDateTime = self._friendNpcList[i].lastDateTime
                local nowTime = os.time()
                local param = Utils.isSameDay(lastDateTime,nowTime)
                local preSec = param.preTab.hour * 60 * 60 + param.preTab.min * 60 + param.preTab.sec
                local nowSec = param.nowTab.hour * 60 * 60 + param.nowTab.min * 60 + param.nowTab.sec
                if param.isSame == true then                
                    local configSec = StaticData.gameconfig[29].const_value
                    if preSec > configSec and nowSec > configSec then
                    elseif preSec < configSec and nowSec < configSec then
                    else
                        self._friendNpcList[i].dateCount = 0
                        self._friendNpcList[i].lastDateTime = 0
                    end                
                else
                    self._friendNpcList[i].dateCount = 1
                    local configSec = StaticData.gameconfig[28].const_value
                    if (nowTime - lastDateTime) < 24 * 60 * 60 and preSec > configSec and nowSec < configSec then
                    else
                        self._friendNpcList[i].dateCount = 0
                        self._friendNpcList[i].lastDateTime = 0
                    end                
                end
                return self._friendNpcList[i].dateCount
            end
        end
    end 
end


--增加NPC好感度
function NpcFriendProtocolHandler:addFriendUpValue(npcId,value)
    if npcId <= 0 then
        return
    end
    for i=1,table.getn(self._friendNpcList) do
        if npcId == self._friendNpcList[i].npcID then
            self._friendNpcList[i].favorDegree = self._friendNpcList[i].favorDegree + value
            self._friendNpcList[i].lastChatTime = os.time()
            if self._friendNpcList[i].favorDegree <= 0 then
                self._friendNpcList[i].favorDegree = 0
            end
            if value > 0 then
                local npcTableInfo = StaticData.npc_prototype[tonumber(npcId)]
                local friendTable = string.split(npcTableInfo.friendship_prize,";")
                local favorGrade = self._friendNpcList[i].favorGrade
                local isBegin = true
                while(favorGrade < 5 and  isBegin)
                do
                    local list = Utils.splitToNumber(friendTable[favorGrade + 1],"_")
                    local friend_value = list[1]
                    if self._friendNpcList[i].favorDegree >= friend_value then
                        self._friendNpcList[i].favorDegree = self._friendNpcList[i].favorDegree - friend_value
                        favorGrade = favorGrade + 1
                        self._friendNpcList[i].favorGrade = favorGrade
                        self:insertFriendAward(npcId,tonumber(string.split(friendTable[favorGrade],"_")[2]))
                    else
                        isBegin = false
                    end
                end
            end
            break
        end
    end 
end

--获得NPC好感阶段
function NpcFriendProtocolHandler:getNpcFavorGrade(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if tonumber(npcId) == self._friendNpcList[i].npcID then
            return self._friendNpcList[i].favorGrade
        end
    end
    return nil
end

--获得NPC好感度
function NpcFriendProtocolHandler:getNpcFavorDegree(npcId)
    for i=1,table.getn(self._friendNpcList) do
        if tonumber(npcId) == self._friendNpcList[i].npcID then
            return self._friendNpcList[i].favorDegree
        end
    end
    return 0
end

--插入一个NPC好友
function NpcFriendProtocolHandler:insertFriendNpc(npcId)
    if self._friendNpcList == nil then
        self._friendNpcList = {}
    end 
    local FriendNpc= {
        npcID = npcId,    --好友npcID
        favorGrade = 0,    --好感阶段
        favorDegree = 0,   --好感度
        lastChatTime = 0,  --最近一次闲聊时间
        lastCallTime = 0,  --最近一次客串时间
        callCount = 0 ,    --当前客串次数
        lastDateTime = 0,  --最近一次约会时间
        dateCount = 0,     --当前约会次数
        waitAward = {},    --待领奖励(通用奖励ID)
        gainAwardNum = 0,  --已领奖励数量(领过几个通用奖励ID)
        fame = 0 ,         --声望
        fame_grade = 0,    --声望等级
    }
    table.insert(self._friendNpcList,FriendNpc)
end

--获得席位npcId
function NpcFriendProtocolHandler:setGainFriendlySeatNpcId(index)
    local currEvent = EventHandler:getOneEvent()
    if table.getn(currEvent.eventPosSet) <= 0 then
        return      
    end   
    for i=1,table.getn(currEvent.eventPosSet) do
        local npcTable = currEvent.eventPosSet[i]
        if npcTable.posIdx == index and (npcTable.roleType == 1 or npcTable.roleType == 3) then
            EventHandler:getOneEvent().friend_npc_id = npcTable.npcID
            return
        end
    end
end

--------------------
--以下增加的函数是为了辅助成就的实现  yan
--@params: grade 好感度，为空则不要求好感度，
function NpcFriendProtocolHandler:getNpcFriendsCountWithGrade( grade )
    local npcFriendList = self._friendNpcList or {}
    if not grade then
        return #npcFriendList
    else
        local resultCount = 0
        for i=1,#npcFriendList do
            local tmpNpcId = npcFriendList[i].npcID
            if self:getNpcFavorGrade(tmpNpcId) >= tonumber(grade) then
                resultCount = resultCount +1
            end
        end
        return resultCount
    end
end
-------------------------
--获取满足指定声望等级的npc好友数量
--@params: degree 为声望等级
function NpcFriendProtocolHandler:getNpcFriendsCountWithFameDegree( degree )
    local npcFriendList = self._friendNpcList or {}
    local resultCount = 0
    for i=1,#npcFriendList do
        local npcId = npcFriendList[i].npcID
        local remownValue = StaticData.npc_prototype[tonumber(npcId)].renown
        if self:getRemownLvWithValue(remownValue) >= tonumber(degree) then
            resultCount = resultCount +1
        end
    end
    return resultCount
end

function NpcFriendProtocolHandler:getRemownLvWithValue(remownValue )
    if not remownValue then return 0 end
    for i=1,table.getn(StaticData.renown_rank_protype) do
        local tmpData =  StaticData.renown_rank_protype[i]
        if tmpData and next(tmpData) then
            if tonumber(remownValue) < tmpData.need_renown then
                return tmpData.renown_rank -1
            end
        end
    end
    return 0
end

return NpcFriendProtocolHandler
